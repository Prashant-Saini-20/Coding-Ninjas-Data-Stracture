You have been given two sorted(in ascending order) singly linked lists of integers.
Write a function to merge them in such a way that the resulting singly linked list is also sorted(in ascending order) and return the new head to the list.

Constraints :
1 <= t = 10^2
0 <= N <= 10 ^ 4
0 <= M <= 10 ^ 4
Where N and M denote the sizes of the singly linked lists. 

Sample Input 1 :
1
2 5 8 12 -1
3 6 9 -1

Sample Output 1 :
2 3 5 6 8 9 12 
*/

Node *mergeTwoSortedLinkedLists(Node *head1, Node *head2)
{
    if(head1==NULL && head2==NULL) return NULL;
    if(head1==NULL) return head2;
    if(head2==NULL) return head1;
    
    Node *head=NULL,*tail=NULL;
    if(head1->data < head2->data){
        head=head1;
        tail=head1;
        head1=head1->next;
    }
    else{
        head=head2;
        tail=head2;
        head2=head2->next;
    }
    while(head1 && head2){
        if(head1->data < head2->data){
            tail->next=head1;
            tail=head1;
            head1=head1->next;   
        }
        else{
            tail->next=head2;
            tail=head2;
            head2=head2->next;
        }
    }
    
    if(head1) tail->next=head1;
    if(head2) tail->next=head2;
    return head;
}

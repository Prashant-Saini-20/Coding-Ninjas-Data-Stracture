/*
For a given singly linked list of integers, find and return the node present at the middle of the list.

Note : If the length of the singly linked list is even, then return the first middle node.
Example: Consider, 10 -> 20 -> 30 -> 40 is the given list, then the nodes present at the middle with respective data values are, 20 and 30.
We return the first node with data 20.

Sample Input 1 :
1
1 2 3 4 5 -1
Sample Output 1 :
3
*/

Node *midPoint(Node *head){
    
    if(head==NULL) return head;
    Node *slow=head;
    Node *fast=head->next;
    while(fast){
        if(fast->next==NULL) break;
        else{
            slow=slow->next;
            fast=fast->next->next;
    	}
    }
    return slow;
}

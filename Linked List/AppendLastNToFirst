/*
You have been given a singly linked list of integers along with an integer 'N'.
Write a function to append the last 'N' nodes towards the front of the singly linked list and returns the new head to the list.

Constraints :
1 <= t <= 10^2
0 <= M <= 10^5
0 <= N < M
Where 'M' is the size of the singly linked list.

Sample Input 1 :
2
1 2 3 4 5 -1
3
10 20 30 40 50 60 -1
5
Sample Output 1 :
3 4 5 1 2
20 30 40 50 60 10
*/


int length(Node *head) {
    Node *temp=head;
	if(temp==NULL) return 0;
    return 1+length(temp->next);
}

Node *appendLastNToFirst(Node *head, int n){
    if(head==NULL) return head;
    if(n==0) return head;
    int l=length(head);
    int startEle=l-n;
    int count=0;
    Node *temp=head;
    while(count<startEle-1){
        temp=temp->next;
        count++;
    }
    count=0;
    Node *newHead=temp->next;
    temp->next=NULL;
    Node *temp2=newHead;
    while(count < n-1){
        temp2=temp2->next;
        count++;
    }
    temp2->next=head;
    return newHead;    
}

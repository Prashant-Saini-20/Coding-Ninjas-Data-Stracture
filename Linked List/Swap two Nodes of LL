/*
You have been given a singly linked list of integers along with two integers, 'i,' and 'j'.
Swap the nodes that are present at the 'i-th' and 'j-th' positions.

Note : Remember, the nodes themselves must be swapped and not the datas.
Constraints :
1 <= t <= 10^2
0 <= M <= 10^5
Where M is the size of the singly linked list.
0 <= i < M
0 <= j < M

Sample Input 1 :
1
3 4 5 2 6 1 9 -1
3 4
Sample Output 1 :
3 4 5 6 2 1 9 
*/

Node *swapNodes(Node *head, int i, int j){
    Node *prev1,*curr1,*prev2,*curr2;
    Node *temp=head;
    if(i==0 && j==0) return head;
    else if(i==0||j==0){
        if(j==0) j=i;
        curr1=temp;
        int count=0;
        while(count<j-1){
            temp=temp->next;
            count++;
        }
        prev2=temp;
        curr2=prev2->next;
        
        //changing links
        
        Node *temp2=curr2->next;
        curr2->next=curr1->next;
        prev2->next=curr1;
        curr1->next=temp2;
        return curr2;
    }
    else{
    	int count1=0;
    	while(count1<i-1){
        	temp=temp->next;
        	count1++;
    	}
    	prev1=temp;
    	curr1=prev1->next;
        
    	int count2=0;
    	temp=head;
    	while(count2<j-1){
        	temp=temp->next;
        	count2++;
    	}
    	prev2=temp;
    	curr2=prev2->next;
    
    	//changing links
    	prev1->next=curr2;
    	prev2->next=curr1;
    	Node* temp2=curr2->next;
    	curr2->next=curr1->next;
    	curr1->next=temp2;       
    	return head;
    }
}
